---
- name: Update cache and check apt packages are installed
  apt:
    pkg: "{{ item }}"
    state: latest
    update_cache: yes
    cache_valid_time: 600
  with_items:
    - python-mysqldb

- name: Install Pip
  apt: name=python-pip state=installed
  become: yes

- name: Install Docker Python library
  pip: name=docker-py state=present
  become: yes

  #- name: Build Docker images from Dockerfiles.
  #  docker_image:
  #    name: "{{ item.name }}"
  #    tag: "{{ item.tag }}"
  #    path: "/vagrant/provisioning/{{ item.directory }}"
  #    state: build
  #  with_items:
  #    - { name: data, tag: "data", directory: data }
  #    - { name: db, tag: mariadb, directory: db }
  #

- name: ensure docker image build directories exist
  file:
    path: "{{ item }}"
    owner: "{{ ansible_ssh_user }}"
    state: directory
  with_items:
    - "{{ ansible_env.PWD }}/.ansible_cache"
    - "{{ ansible_env.PWD }}/.ansible_cache/dockerbuild"
      # when: mariadb_docker_build_image

- name: synchronize role to remote cache for Dockerfile build
  synchronize:
    src: ../
    dest: "{{ ansible_env.PWD }}/.ansible_cache/dockerbuild/mariadb"
    archive: no
    checksum: yes
    recursive: yes
    #when: mariadb_docker_build_image

    #- name: ensure docker image configuration directory exists
    #  file:
    #    path: "{{ item }}"
    #    owner: "{{ ansible_ssh_user }}"
    #    state: directory
    #  with_items:
    #    - "{{ ansible_env.PWD }}/.ansible_cache/dockerbuild/mariadb/provisioning/group_vars"
      #when: mariadb_docker_build_image

    #- name: update configuration used to build docker image from template
    #  template:
    #    src: ansible_cache/dockerbuild/mariadb/provisioning/group_vars/all.yml
    #    owner: "{{ ansible_ssh_user }}"
    #    dest: "{{ ansible_env.PWD }}/.ansible_cache/dockerbuild/mariadb/provisioning/group_vars/all.yml"
  #when: mariadb_docker_build_image  


- name: ensure mariadb docker image has been built
  docker_image:
    name: "{{ mariadb_docker_username }}/{{ mariadb_docker_imagename }}"
    path: "{{ ansible_env.PWD }}/.ansible_cache/dockerbuild/mariadb"
    state: present
  #when: mariadb_docker_build_image

- name: ensure mariadb data container exists
  docker:
    image: "{{ mariadb_docker_username }}/{{ mariadb_docker_imagename }}"
    name: "{{ mariadb_docker_containername }}_data"
    command: /bin/true
    detach: no
    state: present
